package dorkbots.dorkbots_util {	import flash.display.DisplayObject;	import flash.display.DisplayObjectContainer;		public class RemoveDisplayObjects 	{		public function RemoveDisplayObjects():void 		{					}				public static function removeAllDisplayObjects(aDisObject:DisplayObjectContainer):void 		{			if (aDisObject != null) 			{				while (aDisObject.numChildren > 0) 				{					aDisObject.removeChildAt(0);				}			}		}				public static function removeDisplayObject(aDisplayObject:DisplayObjectContainer, aChild:DisplayObject):void 		{			if (aDisplayObject != null && aChild != null) 			{				var aDisplayObjectNumChildren:uint = aDisplayObject.numChildren;				var i:uint = 0;				for (i; i < aDisplayObjectNumChildren; i++) 				{					if (aDisplayObject.getChildAt(i) == aChild) 					{						aDisplayObject.removeChild(aChild);						break;					}				}			}		}				public static function removeDisplayObjectsInArray(aObject:*):void 		{			try			{				var aObjectLength:uint = aObject.length;			}			catch (error:Error)			{				throw new Error("The parameter is not an array. This method's parameter can only be an Array or a Indexed Array (Vector)");			}						if (aObjectLength > 0)			{				var i:uint = 0;				for (i; i < aObjectLength; i++) 				{					try					{						var this_mc:DisplayObject = aObject[i];					}					catch (error:Error)					{						throw new Error("The object in the array is not a DisplayObject!!!!! Only pass arrays that contain display objects.");					}										if (this_mc.parent != null) 					{						this_mc.parent.removeChild(this_mc);					}				}			}		}	}}